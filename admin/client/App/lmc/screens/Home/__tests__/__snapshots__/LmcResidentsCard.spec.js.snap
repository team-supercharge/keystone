// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcResidentsCard should render correct snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <h2
      className="lmc-card-title"
    >
      Residents
    </h2>
    <div
      className="lmc-card"
    >
      <div
        className="lmc-card-body"
      >
        <div>
          <div
            className="lmc-flex-grid"
          >
            <LmcProfileLink
              name="TestName"
              to="TestPath/residents/1"
            />
          </div>
        </div>
      </div>
      <div
        className="lmc-card-footer"
      >
        <div
          className="lmc-flex-container"
        >
          <div
            id="intro-js-step-add-residents"
            style={
              Object {
                "maxWidth": 160,
              }
            }
          >
            <GlyphButton
              block={true}
              color="success"
              glyph="plus"
              glyphStyle={Object {}}
              onClick={[Function]}
              position="left"
              title="Add a Resident"
            >
              <ResponsiveText
                component="span"
                visibleLG="Add a Resident"
                visibleMD="Add a Resident"
                visibleSM="Add a Resident"
              />
            </GlyphButton>
          </div>
          <div
            style={
              Object {
                "maxWidth": 95,
              }
            }
          >
            <Link
              onlyActiveOnIndex={false}
              style={Object {}}
              to="TestPath/residents"
            >
              <Button
                aphroditeStyles={Array []}
                color="default"
                variant="fill"
              >
                <span
                  style={
                    Object {
                      "opacity": 0.6,
                    }
                  }
                >
                  View All
                </span>
              </Button>
            </Link>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "nodes": Array [
    <div>
      <h2
        className="lmc-card-title"
      >
        Residents
      </h2>
      <div
        className="lmc-card"
      >
        <div
          className="lmc-card-body"
        >
          <div>
            <div
              className="lmc-flex-grid"
            >
              <LmcProfileLink
                name="TestName"
                to="TestPath/residents/1"
              />
            </div>
          </div>
        </div>
        <div
          className="lmc-card-footer"
        >
          <div
            className="lmc-flex-container"
          >
            <div
              id="intro-js-step-add-residents"
              style={
                Object {
                  "maxWidth": 160,
                }
              }
            >
              <GlyphButton
                block={true}
                color="success"
                glyph="plus"
                glyphStyle={Object {}}
                onClick={[Function]}
                position="left"
                title="Add a Resident"
              >
                <ResponsiveText
                  component="span"
                  visibleLG="Add a Resident"
                  visibleMD="Add a Resident"
                  visibleSM="Add a Resident"
                />
              </GlyphButton>
            </div>
            <div
              style={
                Object {
                  "maxWidth": 95,
                }
              }
            >
              <Link
                onlyActiveOnIndex={false}
                style={Object {}}
                to="TestPath/residents"
              >
                <Button
                  aphroditeStyles={Array []}
                  color="default"
                  variant="fill"
                >
                  <span
                    style={
                      Object {
                        "opacity": 0.6,
                      }
                    }
                  >
                    View All
                  </span>
                </Button>
              </Link>
            </div>
          </div>
        </div>
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcResidentsCard
        onCreate={[Function]}
        residents={
          Array [
            Object {
              "id": 1,
              "name": "TestName",
              "status": "active",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcResidentsCard {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "onCreate": [Function],
          "residents": Array [
            Object {
              "id": 1,
              "name": "TestName",
              "status": "active",
            },
          ],
        },
        "refs": Object {},
        "renderResidents": [Function],
        "showMore": [Function],
        "state": Object {
          "max_residents_displayed": 10,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <h2
            className="lmc-card-title"
          >
            Residents
          </h2>
          <div
            className="lmc-card"
          >
            <div
              className="lmc-card-body"
            >
              <div>
                <div
                  className="lmc-flex-grid"
                >
                  <LmcProfileLink
                    name="TestName"
                    to="TestPath/residents/1"
                  />
                </div>
              </div>
            </div>
            <div
              className="lmc-card-footer"
            >
              <div
                className="lmc-flex-container"
              >
                <div
                  id="intro-js-step-add-residents"
                  style={
                    Object {
                      "maxWidth": 160,
                    }
                  }
                >
                  <GlyphButton
                    block={true}
                    color="success"
                    glyph="plus"
                    glyphStyle={Object {}}
                    onClick={[Function]}
                    position="left"
                    title="Add a Resident"
                  >
                    <ResponsiveText
                      component="span"
                      visibleLG="Add a Resident"
                      visibleMD="Add a Resident"
                      visibleSM="Add a Resident"
                    />
                  </GlyphButton>
                </div>
                <div
                  style={
                    Object {
                      "maxWidth": 95,
                    }
                  }
                >
                  <Link
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to="TestPath/residents"
                  >
                    <Button
                      aphroditeStyles={Array []}
                      color="default"
                      variant="fill"
                    >
                      <span
                        style={
                          Object {
                            "opacity": 0.6,
                          }
                        }
                      >
                        View All
                      </span>
                    </Button>
                  </Link>
                </div>
              </div>
            </div>
          </div>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <h2
            className="lmc-card-title"
          >
            Residents
          </h2>
          <div
            className="lmc-card"
          >
            <div
              className="lmc-card-body"
            >
              <div>
                <div
                  className="lmc-flex-grid"
                >
                  <LmcProfileLink
                    name="TestName"
                    to="TestPath/residents/1"
                  />
                </div>
              </div>
            </div>
            <div
              className="lmc-card-footer"
            >
              <div
                className="lmc-flex-container"
              >
                <div
                  id="intro-js-step-add-residents"
                  style={
                    Object {
                      "maxWidth": 160,
                    }
                  }
                >
                  <GlyphButton
                    block={true}
                    color="success"
                    glyph="plus"
                    glyphStyle={Object {}}
                    onClick={[Function]}
                    position="left"
                    title="Add a Resident"
                  >
                    <ResponsiveText
                      component="span"
                      visibleLG="Add a Resident"
                      visibleMD="Add a Resident"
                      visibleSM="Add a Resident"
                    />
                  </GlyphButton>
                </div>
                <div
                  style={
                    Object {
                      "maxWidth": 95,
                    }
                  }
                >
                  <Link
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to="TestPath/residents"
                  >
                    <Button
                      aphroditeStyles={Array []}
                      color="default"
                      variant="fill"
                    >
                      <span
                        style={
                          Object {
                            "opacity": 0.6,
                          }
                        }
                      >
                        View All
                      </span>
                    </Button>
                  </Link>
                </div>
              </div>
            </div>
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcResidentsCard
    onCreate={[Function]}
    residents={
      Array [
        Object {
          "id": 1,
          "name": "TestName",
          "status": "active",
        },
      ]
    }
  />,
}
`;
