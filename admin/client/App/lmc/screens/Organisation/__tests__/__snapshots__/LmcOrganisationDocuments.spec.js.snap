// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcOrganisationDocuments renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    style={
      Object {
        "height": "85vh",
        "overflow": "scroll",
        "padding": "50px 20px 0px 20px",
      }
    }
  >
    <div
      style={
        Object {
          "margin": "0 auto",
          "maxWidth": 1000,
        }
      }
    >
      <LmcCreateButton
        buttonText="Document"
        listId="HomeDocument"
        onCreate={[MockFunction]}
        style={
          Object {
            "float": "right",
            "width": "15vw",
          }
        }
        title="Add a Document"
      />
      <LmcDocumentList
        documents={
          Object {
            "Policies": Array [
              Object {
                "name": "TestDocument",
              },
            ],
            "Procedures": Array [
              Object {
                "name": "TestDocument2",
              },
            ],
          }
        }
        listId="home-documents"
        onDelete={[MockFunction]}
      />
    </div>
  </div>,
  "nodes": Array [
    <div
      style={
        Object {
          "height": "85vh",
          "overflow": "scroll",
          "padding": "50px 20px 0px 20px",
        }
      }
    >
      <div
        style={
          Object {
            "margin": "0 auto",
            "maxWidth": 1000,
          }
        }
      >
        <LmcCreateButton
          buttonText="Document"
          listId="HomeDocument"
          onCreate={[MockFunction]}
          style={
            Object {
              "float": "right",
              "width": "15vw",
            }
          }
          title="Add a Document"
        />
        <LmcDocumentList
          documents={
            Object {
              "Policies": Array [
                Object {
                  "name": "TestDocument",
                },
              ],
              "Procedures": Array [
                Object {
                  "name": "TestDocument2",
                },
              ],
            }
          }
          listId="home-documents"
          onDelete={[MockFunction]}
        />
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcOrganisationDocuments
        deleteDocument={[MockFunction]}
        documents={
          Object {
            "Policies": Array [
              Object {
                "name": "TestDocument",
              },
            ],
            "Procedures": Array [
              Object {
                "name": "TestDocument2",
              },
            ],
          }
        }
        fetchDocuments={[MockFunction]}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcOrganisationDocuments {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "deleteDocument": [MockFunction],
          "documents": Object {
            "Policies": Array [
              Object {
                "name": "TestDocument",
              },
            ],
            "Procedures": Array [
              Object {
                "name": "TestDocument2",
              },
            ],
          },
          "fetchDocuments": [MockFunction],
        },
        "refs": Object {},
        "state": Object {
          "documentsFetchInterval": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          style={
            Object {
              "height": "85vh",
              "overflow": "scroll",
              "padding": "50px 20px 0px 20px",
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "maxWidth": 1000,
              }
            }
          >
            <LmcCreateButton
              buttonText="Document"
              listId="HomeDocument"
              onCreate={[MockFunction]}
              style={
                Object {
                  "float": "right",
                  "width": "15vw",
                }
              }
              title="Add a Document"
            />
            <LmcDocumentList
              documents={
                Object {
                  "Policies": Array [
                    Object {
                      "name": "TestDocument",
                    },
                  ],
                  "Procedures": Array [
                    Object {
                      "name": "TestDocument2",
                    },
                  ],
                }
              }
              listId="home-documents"
              onDelete={[MockFunction]}
            />
          </div>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          style={
            Object {
              "height": "85vh",
              "overflow": "scroll",
              "padding": "50px 20px 0px 20px",
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "maxWidth": 1000,
              }
            }
          >
            <LmcCreateButton
              buttonText="Document"
              listId="HomeDocument"
              onCreate={[MockFunction]}
              style={
                Object {
                  "float": "right",
                  "width": "15vw",
                }
              }
              title="Add a Document"
            />
            <LmcDocumentList
              documents={
                Object {
                  "Policies": Array [
                    Object {
                      "name": "TestDocument",
                    },
                  ],
                  "Procedures": Array [
                    Object {
                      "name": "TestDocument2",
                    },
                  ],
                }
              }
              listId="home-documents"
              onDelete={[MockFunction]}
            />
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcOrganisationDocuments
    deleteDocument={[MockFunction]}
    documents={
      Object {
        "Policies": Array [
          Object {
            "name": "TestDocument",
          },
        ],
        "Procedures": Array [
          Object {
            "name": "TestDocument2",
          },
        ],
      }
    }
    fetchDocuments={[MockFunction]}
  />,
}
`;
