// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcOrganisationDocuments renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    style={Object {}}
  >
    <LmcCreateButton
      buttonText="Document"
      listId="HomeDocument"
      onCreate={[MockFunction]}
      style={
        Object {
          "float": "right",
          "width": 200,
        }
      }
      title="Add a Document"
    />
  </div>,
  "nodes": Array [
    <div
      style={Object {}}
    >
      <LmcCreateButton
        buttonText="Document"
        listId="HomeDocument"
        onCreate={[MockFunction]}
        style={
          Object {
            "float": "right",
            "width": 200,
          }
        }
        title="Add a Document"
      />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcOrganisationDocuments
        documents={
          Array [
            Object {
              "category": "TestCategoryId",
              "id": "TestId",
              "name": "TestName",
            },
          ]
        }
        fetchDocuments={[MockFunction]}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcOrganisationDocuments {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "documents": Array [
            Object {
              "category": "TestCategoryId",
              "id": "TestId",
              "name": "TestName",
            },
          ],
          "fetchDocuments": [MockFunction],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          style={Object {}}
        >
          <LmcCreateButton
            buttonText="Document"
            listId="HomeDocument"
            onCreate={[MockFunction]}
            style={
              Object {
                "float": "right",
                "width": 200,
              }
            }
            title="Add a Document"
          />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          style={Object {}}
        >
          <LmcCreateButton
            buttonText="Document"
            listId="HomeDocument"
            onCreate={[MockFunction]}
            style={
              Object {
                "float": "right",
                "width": 200,
              }
            }
            title="Add a Document"
          />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcOrganisationDocuments
    documents={
      Array [
        Object {
          "category": "TestCategoryId",
          "id": "TestId",
          "name": "TestName",
        },
      ]
    }
    fetchDocuments={[MockFunction]}
  />,
}
`;
