// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcShiftPasswordItem renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <tr>
    <td
      style={
        Object {
          "height": 70,
        }
      }
    >
      <span
        style={
          Object {
            "height": 70,
          }
        }
      >
        testShift
      </span>
    </td>
    <td
      style={
        Object {
          "height": 70,
        }
      }
    >
      <span
        style={
          Object {
            "height": 70,
          }
        }
      >
        08:00
      </span>
    </td>
    <td
      style={
        Object {
          "height": 70,
        }
      }
    >
      <span
        style={
          Object {
            "height": 70,
          }
        }
      >
        18:00
      </span>
    </td>
    <td
      style={
        Object {
          "height": 70,
        }
      }
    >
      <span
        style={
          Object {
            "height": 70,
          }
        }
      >
        undefined hours
      </span>
    </td>
    <td>
      <GlyphButton
        component={[Function]}
        glyph="pencil"
        glyphStyle={Object {}}
        position="left"
        to="/admin/shifts/testId"
      >
        Edit
      </GlyphButton>
      <Button
        aphroditeStyles={Array []}
        color="delete"
        data-button="delete"
        onClick={[Function]}
        variant="link"
      >
        Delete
      </Button>
      <ConfirmationDialog
        cancelLabel="Cancel"
        confirmationLabel="Delete"
        confirmationType="warning"
        isOpen={false}
        onCancel={[Function]}
        onConfirmation={[Function]}
      >
        <div>
          Are you sure you want to delete this shift? If you go ahead, it can’t be undone.
        </div>
      </ConfirmationDialog>
    </td>
  </tr>,
  "nodes": Array [
    <tr>
      <td
        style={
          Object {
            "height": 70,
          }
        }
      >
        <span
          style={
            Object {
              "height": 70,
            }
          }
        >
          testShift
        </span>
      </td>
      <td
        style={
          Object {
            "height": 70,
          }
        }
      >
        <span
          style={
            Object {
              "height": 70,
            }
          }
        >
          08:00
        </span>
      </td>
      <td
        style={
          Object {
            "height": 70,
          }
        }
      >
        <span
          style={
            Object {
              "height": 70,
            }
          }
        >
          18:00
        </span>
      </td>
      <td
        style={
          Object {
            "height": 70,
          }
        }
      >
        <span
          style={
            Object {
              "height": 70,
            }
          }
        >
          undefined hours
        </span>
      </td>
      <td>
        <GlyphButton
          component={[Function]}
          glyph="pencil"
          glyphStyle={Object {}}
          position="left"
          to="/admin/shifts/testId"
        >
          Edit
        </GlyphButton>
        <Button
          aphroditeStyles={Array []}
          color="delete"
          data-button="delete"
          onClick={[Function]}
          variant="link"
        >
          Delete
        </Button>
        <ConfirmationDialog
          cancelLabel="Cancel"
          confirmationLabel="Delete"
          confirmationType="warning"
          isOpen={false}
          onCancel={[Function]}
          onConfirmation={[Function]}
        >
          <div>
            Are you sure you want to delete this shift? If you go ahead, it can’t be undone.
          </div>
        </ConfirmationDialog>
      </td>
    </tr>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcShiftPasswordItem
        onDelete={[MockFunction]}
        shift={
          Object {
            "accessTime": "4",
            "endTime": "18:00",
            "id": "testId",
            "password": "testPassword",
            "startTime": "08:00",
            "title": "testShift",
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcShiftPasswordItem {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleDeleteConfirm": [Function],
        "props": Object {
          "onDelete": [MockFunction],
          "shift": Object {
            "accessTime": "4",
            "endTime": "18:00",
            "id": "testId",
            "password": "testPassword",
            "startTime": "08:00",
            "title": "testShift",
          },
        },
        "refs": Object {},
        "state": Object {
          "deleteDialogOpen": false,
        },
        "toggleDeleteDialog": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <tr>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              testShift
            </span>
          </td>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              08:00
            </span>
          </td>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              18:00
            </span>
          </td>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              undefined hours
            </span>
          </td>
          <td>
            <GlyphButton
              component={[Function]}
              glyph="pencil"
              glyphStyle={Object {}}
              position="left"
              to="/admin/shifts/testId"
            >
              Edit
            </GlyphButton>
            <Button
              aphroditeStyles={Array []}
              color="delete"
              data-button="delete"
              onClick={[Function]}
              variant="link"
            >
              Delete
            </Button>
            <ConfirmationDialog
              cancelLabel="Cancel"
              confirmationLabel="Delete"
              confirmationType="warning"
              isOpen={false}
              onCancel={[Function]}
              onConfirmation={[Function]}
            >
              <div>
                Are you sure you want to delete this shift? If you go ahead, it can’t be undone.
              </div>
            </ConfirmationDialog>
          </td>
        </tr>,
        "_debugID": 2,
        "_renderedOutput": <tr>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              testShift
            </span>
          </td>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              08:00
            </span>
          </td>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              18:00
            </span>
          </td>
          <td
            style={
              Object {
                "height": 70,
              }
            }
          >
            <span
              style={
                Object {
                  "height": 70,
                }
              }
            >
              undefined hours
            </span>
          </td>
          <td>
            <GlyphButton
              component={[Function]}
              glyph="pencil"
              glyphStyle={Object {}}
              position="left"
              to="/admin/shifts/testId"
            >
              Edit
            </GlyphButton>
            <Button
              aphroditeStyles={Array []}
              color="delete"
              data-button="delete"
              onClick={[Function]}
              variant="link"
            >
              Delete
            </Button>
            <ConfirmationDialog
              cancelLabel="Cancel"
              confirmationLabel="Delete"
              confirmationType="warning"
              isOpen={false}
              onCancel={[Function]}
              onConfirmation={[Function]}
            >
              <div>
                Are you sure you want to delete this shift? If you go ahead, it can’t be undone.
              </div>
            </ConfirmationDialog>
          </td>
        </tr>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcShiftPasswordItem
    onDelete={[MockFunction]}
    shift={
      Object {
        "accessTime": "4",
        "endTime": "18:00",
        "id": "testId",
        "password": "testPassword",
        "startTime": "08:00",
        "title": "testShift",
      }
    }
  />,
}
`;
