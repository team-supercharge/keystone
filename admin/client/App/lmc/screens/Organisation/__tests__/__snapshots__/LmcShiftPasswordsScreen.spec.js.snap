// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcShiftPasswordsScreen renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    style={
      Object {
        "height": "83vh",
        "overflow": "scroll",
        "padding": "50px 20px 0px 20px",
      }
    }
  >
    <div
      style={
        Object {
          "margin": "0 auto",
          "maxWidth": 1000,
          "wordWrap": "break-word",
        }
      }
    >
      <LmcCreateButton
        buttonText="Shift Password"
        listId="Shift"
        onCreate={[MockFunction]}
        style={
          Object {
            "float": "right",
            "width": 200,
          }
        }
        title="Add a Shift Password"
      />
      <LmcShiftPasswordsTable
        shifts={
          Array [
            Object {
              "id": "testId1",
              "password": "testPassword1",
              "title": "testShift1",
            },
            Object {
              "id": "testId2",
              "password": "testPassword2",
              "title": "testShift2",
            },
          ]
        }
      />
    </div>
  </div>,
  "nodes": Array [
    <div
      style={
        Object {
          "height": "83vh",
          "overflow": "scroll",
          "padding": "50px 20px 0px 20px",
        }
      }
    >
      <div
        style={
          Object {
            "margin": "0 auto",
            "maxWidth": 1000,
            "wordWrap": "break-word",
          }
        }
      >
        <LmcCreateButton
          buttonText="Shift Password"
          listId="Shift"
          onCreate={[MockFunction]}
          style={
            Object {
              "float": "right",
              "width": 200,
            }
          }
          title="Add a Shift Password"
        />
        <LmcShiftPasswordsTable
          shifts={
            Array [
              Object {
                "id": "testId1",
                "password": "testPassword1",
                "title": "testShift1",
              },
              Object {
                "id": "testId2",
                "password": "testPassword2",
                "title": "testShift2",
              },
            ]
          }
        />
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcShiftPasswordsScreen
        fetchShifts={[MockFunction]}
        shifts={
          Array [
            Object {
              "id": "testId1",
              "password": "testPassword1",
              "title": "testShift1",
            },
            Object {
              "id": "testId2",
              "password": "testPassword2",
              "title": "testShift2",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcShiftPasswordsScreen {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "fetchShifts": [MockFunction],
          "shifts": Array [
            Object {
              "id": "testId1",
              "password": "testPassword1",
              "title": "testShift1",
            },
            Object {
              "id": "testId2",
              "password": "testPassword2",
              "title": "testShift2",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          style={
            Object {
              "height": "83vh",
              "overflow": "scroll",
              "padding": "50px 20px 0px 20px",
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "maxWidth": 1000,
                "wordWrap": "break-word",
              }
            }
          >
            <LmcCreateButton
              buttonText="Shift Password"
              listId="Shift"
              onCreate={[MockFunction]}
              style={
                Object {
                  "float": "right",
                  "width": 200,
                }
              }
              title="Add a Shift Password"
            />
            <LmcShiftPasswordsTable
              shifts={
                Array [
                  Object {
                    "id": "testId1",
                    "password": "testPassword1",
                    "title": "testShift1",
                  },
                  Object {
                    "id": "testId2",
                    "password": "testPassword2",
                    "title": "testShift2",
                  },
                ]
              }
            />
          </div>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          style={
            Object {
              "height": "83vh",
              "overflow": "scroll",
              "padding": "50px 20px 0px 20px",
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "maxWidth": 1000,
                "wordWrap": "break-word",
              }
            }
          >
            <LmcCreateButton
              buttonText="Shift Password"
              listId="Shift"
              onCreate={[MockFunction]}
              style={
                Object {
                  "float": "right",
                  "width": 200,
                }
              }
              title="Add a Shift Password"
            />
            <LmcShiftPasswordsTable
              shifts={
                Array [
                  Object {
                    "id": "testId1",
                    "password": "testPassword1",
                    "title": "testShift1",
                  },
                  Object {
                    "id": "testId2",
                    "password": "testPassword2",
                    "title": "testShift2",
                  },
                ]
              }
            />
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcShiftPasswordsScreen
    fetchShifts={[MockFunction]}
    shifts={
      Array [
        Object {
          "id": "testId1",
          "password": "testPassword1",
          "title": "testShift1",
        },
        Object {
          "id": "testId2",
          "password": "testPassword2",
          "title": "testShift2",
        },
      ]
    }
  />,
}
`;
