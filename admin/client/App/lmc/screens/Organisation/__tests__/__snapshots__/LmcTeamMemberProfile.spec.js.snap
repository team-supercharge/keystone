// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcTeamMemberProfile renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <Button
      aphroditeStyles={Array []}
      color="default"
      variant="fill"
    >
      <Link
        onlyActiveOnIndex={false}
        style={
          Object {
            "color": "black",
            "display": "block",
            "height": "100%",
            "textDecoration": "none",
          }
        }
        to="/admin/users/TestId"
      >
        Edit Information
      </Link>
    </Button>
  </div>,
  "nodes": Array [
    <div>
      <Button
        aphroditeStyles={Array []}
        color="default"
        variant="fill"
      >
        <Link
          onlyActiveOnIndex={false}
          style={
            Object {
              "color": "black",
              "display": "block",
              "height": "100%",
              "textDecoration": "none",
            }
          }
          to="/admin/users/TestId"
        >
          Edit Information
        </Link>
      </Button>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcTeamMemberProfile
        selectedUser="TestId"
        selectedUserProfile={
          Object {
            "active": true,
            "id": "TestId",
            "name": Object {
              "first": "Test",
              "last": "TeamMember",
            },
            "picture": "TestPictureUrl",
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcTeamMemberProfile {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "selectedUser": "TestId",
          "selectedUserProfile": Object {
            "active": true,
            "id": "TestId",
            "name": Object {
              "first": "Test",
              "last": "TeamMember",
            },
            "picture": "TestPictureUrl",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <Button
            aphroditeStyles={Array []}
            color="default"
            variant="fill"
          >
            <Link
              onlyActiveOnIndex={false}
              style={
                Object {
                  "color": "black",
                  "display": "block",
                  "height": "100%",
                  "textDecoration": "none",
                }
              }
              to="/admin/users/TestId"
            >
              Edit Information
            </Link>
          </Button>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <Button
            aphroditeStyles={Array []}
            color="default"
            variant="fill"
          >
            <Link
              onlyActiveOnIndex={false}
              style={
                Object {
                  "color": "black",
                  "display": "block",
                  "height": "100%",
                  "textDecoration": "none",
                }
              }
              to="/admin/users/TestId"
            >
              Edit Information
            </Link>
          </Button>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcTeamMemberProfile
    selectedUser="TestId"
    selectedUserProfile={
      Object {
        "active": true,
        "id": "TestId",
        "name": Object {
          "first": "Test",
          "last": "TeamMember",
        },
        "picture": "TestPictureUrl",
      }
    }
  />,
}
`;
