// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcTeamScreen renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <div
      style={
        Object {
          "display": "flex",
          "flex": "1",
          "flexDirection": "column",
        }
      }
    >
      <LmcSidebar
        itemLabel="Team Member"
        items={Array []}
        listId="User"
        onCreate={[Function]}
        selectedItem=""
        setSelectedItem={[Function]}
        title="Team Members"
      />
    </div>
    <div
      style={
        Object {
          "flex": "3.5",
        }
      }
    />
  </div>,
  "nodes": Array [
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
        }
      }
    >
      <div
        style={
          Object {
            "display": "flex",
            "flex": "1",
            "flexDirection": "column",
          }
        }
      >
        <LmcSidebar
          itemLabel="Team Member"
          items={Array []}
          listId="User"
          onCreate={[Function]}
          selectedItem=""
          setSelectedItem={[Function]}
          title="Team Members"
        />
      </div>
      <div
        style={
          Object {
            "flex": "3.5",
          }
        }
      />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcTeamScreen />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcTeamScreen {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onCreate": [Function],
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
        >
          <div
            style={
              Object {
                "display": "flex",
                "flex": "1",
                "flexDirection": "column",
              }
            }
          >
            <LmcSidebar
              itemLabel="Team Member"
              items={Array []}
              listId="User"
              onCreate={[Function]}
              selectedItem=""
              setSelectedItem={[Function]}
              title="Team Members"
            />
          </div>
          <div
            style={
              Object {
                "flex": "3.5",
              }
            }
          />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
        >
          <div
            style={
              Object {
                "display": "flex",
                "flex": "1",
                "flexDirection": "column",
              }
            }
          >
            <LmcSidebar
              itemLabel="Team Member"
              items={Array []}
              listId="User"
              onCreate={[Function]}
              selectedItem=""
              setSelectedItem={[Function]}
              title="Team Members"
            />
          </div>
          <div
            style={
              Object {
                "flex": "3.5",
              }
            }
          />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcTeamScreen />,
}
`;
