// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcCurrentHandover renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <h2
        style={
          Object {
            "fontWeight": 300,
            "hyphens": "auto",
            "marginBottom": "0.3em",
            "textOverflow": "ellipsis",
          }
        }
      >
        Current Handover
      </h2>
      <GlyphButton
        className="lmc-collapse-button"
        glyph="chevron-up"
        glyphStyle={Object {}}
        onClick={[Function]}
        position="default"
      />
    </div>
    <div
      className="lmc-theme-gradient"
      style={
        Object {
          "height": 2,
          "marginBottom": 22,
          "width": "100%",
        }
      }
    />
    <AnimateHeight
      animateOpacity={false}
      animationStateClasses={
        Object {
          "animating": "rah-animating",
          "animatingDown": "rah-animating--down",
          "animatingToHeightAuto": "rah-animating--to-height-auto",
          "animatingToHeightSpecific": "rah-animating--to-height-specific",
          "animatingToHeightZero": "rah-animating--to-height-zero",
          "animatingUp": "rah-animating--up",
          "static": "rah-static",
          "staticHeightAuto": "rah-static--height-auto",
          "staticHeightSpecific": "rah-static--height-specific",
          "staticHeightZero": "rah-static--height-zero",
        }
      }
      applyInlineTransitions={true}
      delay={0}
      duration={500}
      easing="ease"
      height="auto"
      style={Object {}}
    >
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <div
          style={
            Object {
              "paddingRight": 20,
              "width": "60%",
            }
          }
        >
          <div>
            <LmcHandoverResidentItem
              data={
                Object {
                  "logs": Array [
                    Object {
                      "createdBy": "TestCarer",
                      "description": "This is a log",
                      "id": "TestId",
                    },
                  ],
                  "resident": Object {
                    "id": "TestId2",
                    "name": "TestResident",
                    "picture": "TestPicture",
                  },
                }
              }
            />
          </div>
        </div>
        <div
          style={
            Object {
              "flex": "1",
              "width": "40%",
            }
          }
        >
          <LmcHandoverNotes
            notes={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "id": "TestId",
                  "note": "This is a note",
                },
              ]
            }
          />
        </div>
      </div>
    </AnimateHeight>
  </div>,
  "nodes": Array [
    <div>
      <div
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <h2
          style={
            Object {
              "fontWeight": 300,
              "hyphens": "auto",
              "marginBottom": "0.3em",
              "textOverflow": "ellipsis",
            }
          }
        >
          Current Handover
        </h2>
        <GlyphButton
          className="lmc-collapse-button"
          glyph="chevron-up"
          glyphStyle={Object {}}
          onClick={[Function]}
          position="default"
        />
      </div>
      <div
        className="lmc-theme-gradient"
        style={
          Object {
            "height": 2,
            "marginBottom": 22,
            "width": "100%",
          }
        }
      />
      <AnimateHeight
        animateOpacity={false}
        animationStateClasses={
          Object {
            "animating": "rah-animating",
            "animatingDown": "rah-animating--down",
            "animatingToHeightAuto": "rah-animating--to-height-auto",
            "animatingToHeightSpecific": "rah-animating--to-height-specific",
            "animatingToHeightZero": "rah-animating--to-height-zero",
            "animatingUp": "rah-animating--up",
            "static": "rah-static",
            "staticHeightAuto": "rah-static--height-auto",
            "staticHeightSpecific": "rah-static--height-specific",
            "staticHeightZero": "rah-static--height-zero",
          }
        }
        applyInlineTransitions={true}
        delay={0}
        duration={500}
        easing="ease"
        height="auto"
        style={Object {}}
      >
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
              "width": "100%",
            }
          }
        >
          <div
            style={
              Object {
                "paddingRight": 20,
                "width": "60%",
              }
            }
          >
            <div>
              <LmcHandoverResidentItem
                data={
                  Object {
                    "logs": Array [
                      Object {
                        "createdBy": "TestCarer",
                        "description": "This is a log",
                        "id": "TestId",
                      },
                    ],
                    "resident": Object {
                      "id": "TestId2",
                      "name": "TestResident",
                      "picture": "TestPicture",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            style={
              Object {
                "flex": "1",
                "width": "40%",
              }
            }
          >
            <LmcHandoverNotes
              notes={
                Array [
                  Object {
                    "createdBy": "TestCarer",
                    "id": "TestId",
                    "note": "This is a note",
                  },
                ]
              }
            />
          </div>
        </div>
      </AnimateHeight>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcCurrentHandover
        logsByResident={
          Array [
            Object {
              "logs": Array [
                Object {
                  "createdBy": "TestCarer",
                  "description": "This is a log",
                  "id": "TestId",
                },
              ],
              "resident": Object {
                "id": "TestId2",
                "name": "TestResident",
                "picture": "TestPicture",
              },
            },
          ]
        }
        notes={
          Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "note": "This is a note",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcCurrentHandover {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "logsByResident": Array [
            Object {
              "logs": Array [
                Object {
                  "createdBy": "TestCarer",
                  "description": "This is a log",
                  "id": "TestId",
                },
              ],
              "resident": Object {
                "id": "TestId2",
                "name": "TestResident",
                "picture": "TestPicture",
              },
            },
          ],
          "notes": Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "note": "This is a note",
            },
          ],
        },
        "refs": Object {},
        "state": Object {
          "isShowingContent": true,
        },
        "toggleContent": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <div
            style={
              Object {
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <h2
              style={
                Object {
                  "fontWeight": 300,
                  "hyphens": "auto",
                  "marginBottom": "0.3em",
                  "textOverflow": "ellipsis",
                }
              }
            >
              Current Handover
            </h2>
            <GlyphButton
              className="lmc-collapse-button"
              glyph="chevron-up"
              glyphStyle={Object {}}
              onClick={[Function]}
              position="default"
            />
          </div>
          <div
            className="lmc-theme-gradient"
            style={
              Object {
                "height": 2,
                "marginBottom": 22,
                "width": "100%",
              }
            }
          />
          <AnimateHeight
            animateOpacity={false}
            animationStateClasses={
              Object {
                "animating": "rah-animating",
                "animatingDown": "rah-animating--down",
                "animatingToHeightAuto": "rah-animating--to-height-auto",
                "animatingToHeightSpecific": "rah-animating--to-height-specific",
                "animatingToHeightZero": "rah-animating--to-height-zero",
                "animatingUp": "rah-animating--up",
                "static": "rah-static",
                "staticHeightAuto": "rah-static--height-auto",
                "staticHeightSpecific": "rah-static--height-specific",
                "staticHeightZero": "rah-static--height-zero",
              }
            }
            applyInlineTransitions={true}
            delay={0}
            duration={500}
            easing="ease"
            height="auto"
            style={Object {}}
          >
            <div
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "width": "100%",
                }
              }
            >
              <div
                style={
                  Object {
                    "paddingRight": 20,
                    "width": "60%",
                  }
                }
              >
                <div>
                  <LmcHandoverResidentItem
                    data={
                      Object {
                        "logs": Array [
                          Object {
                            "createdBy": "TestCarer",
                            "description": "This is a log",
                            "id": "TestId",
                          },
                        ],
                        "resident": Object {
                          "id": "TestId2",
                          "name": "TestResident",
                          "picture": "TestPicture",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                style={
                  Object {
                    "flex": "1",
                    "width": "40%",
                  }
                }
              >
                <LmcHandoverNotes
                  notes={
                    Array [
                      Object {
                        "createdBy": "TestCarer",
                        "id": "TestId",
                        "note": "This is a note",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </AnimateHeight>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <div
            style={
              Object {
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <h2
              style={
                Object {
                  "fontWeight": 300,
                  "hyphens": "auto",
                  "marginBottom": "0.3em",
                  "textOverflow": "ellipsis",
                }
              }
            >
              Current Handover
            </h2>
            <GlyphButton
              className="lmc-collapse-button"
              glyph="chevron-up"
              glyphStyle={Object {}}
              onClick={[Function]}
              position="default"
            />
          </div>
          <div
            className="lmc-theme-gradient"
            style={
              Object {
                "height": 2,
                "marginBottom": 22,
                "width": "100%",
              }
            }
          />
          <AnimateHeight
            animateOpacity={false}
            animationStateClasses={
              Object {
                "animating": "rah-animating",
                "animatingDown": "rah-animating--down",
                "animatingToHeightAuto": "rah-animating--to-height-auto",
                "animatingToHeightSpecific": "rah-animating--to-height-specific",
                "animatingToHeightZero": "rah-animating--to-height-zero",
                "animatingUp": "rah-animating--up",
                "static": "rah-static",
                "staticHeightAuto": "rah-static--height-auto",
                "staticHeightSpecific": "rah-static--height-specific",
                "staticHeightZero": "rah-static--height-zero",
              }
            }
            applyInlineTransitions={true}
            delay={0}
            duration={500}
            easing="ease"
            height="auto"
            style={Object {}}
          >
            <div
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "width": "100%",
                }
              }
            >
              <div
                style={
                  Object {
                    "paddingRight": 20,
                    "width": "60%",
                  }
                }
              >
                <div>
                  <LmcHandoverResidentItem
                    data={
                      Object {
                        "logs": Array [
                          Object {
                            "createdBy": "TestCarer",
                            "description": "This is a log",
                            "id": "TestId",
                          },
                        ],
                        "resident": Object {
                          "id": "TestId2",
                          "name": "TestResident",
                          "picture": "TestPicture",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                style={
                  Object {
                    "flex": "1",
                    "width": "40%",
                  }
                }
              >
                <LmcHandoverNotes
                  notes={
                    Array [
                      Object {
                        "createdBy": "TestCarer",
                        "id": "TestId",
                        "note": "This is a note",
                      },
                    ]
                  }
                />
              </div>
            </div>
          </AnimateHeight>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcCurrentHandover
    logsByResident={
      Array [
        Object {
          "logs": Array [
            Object {
              "createdBy": "TestCarer",
              "description": "This is a log",
              "id": "TestId",
            },
          ],
          "resident": Object {
            "id": "TestId2",
            "name": "TestResident",
            "picture": "TestPicture",
          },
        },
      ]
    }
    notes={
      Array [
        Object {
          "createdBy": "TestCarer",
          "id": "TestId",
          "note": "This is a note",
        },
      ]
    }
  />,
}
`;
