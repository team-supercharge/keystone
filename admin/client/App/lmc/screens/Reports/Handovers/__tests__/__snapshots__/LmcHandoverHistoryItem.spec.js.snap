// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcHandoverHistoryItem renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <LmcHandoverTitleBar
      createdBy={Object {}}
      createdOn="Tue Jan 01 2019 00:00:00 GMT+0000 (GMT)"
      onClick={[Function]}
      witnessedBy={Object {}}
    />
    <AnimateHeight
      animateOpacity={false}
      animationStateClasses={
        Object {
          "animating": "rah-animating",
          "animatingDown": "rah-animating--down",
          "animatingToHeightAuto": "rah-animating--to-height-auto",
          "animatingToHeightSpecific": "rah-animating--to-height-specific",
          "animatingToHeightZero": "rah-animating--to-height-zero",
          "animatingUp": "rah-animating--up",
          "static": "rah-static",
          "staticHeightAuto": "rah-static--height-auto",
          "staticHeightSpecific": "rah-static--height-specific",
          "staticHeightZero": "rah-static--height-zero",
        }
      }
      applyInlineTransitions={true}
      delay={0}
      duration={500}
      easing="ease"
      height={0}
      style={Object {}}
    >
      <div
        style={
          Object {
            "borderBottom": "1px #eaeaea solid",
            "display": "flex",
            "flexDirection": "row",
            "marginBottom": 10,
            "width": "100%",
          }
        }
      >
        <div
          style={
            Object {
              "paddingRight": 20,
              "width": "60%",
            }
          }
        >
          <div>
            <LmcHandoverResidentItem
              data={
                Object {
                  "logs": Array [
                    Object {
                      "createdBy": "TestCarer",
                      "description": "This is a log",
                      "id": "TestId",
                    },
                  ],
                  "resident": Object {
                    "id": "TestId2",
                    "name": "TestResident",
                    "picture": "TestPicture",
                  },
                }
              }
            />
          </div>
        </div>
        <div
          style={
            Object {
              "display": "flex",
              "flex": "1",
              "flexDirection": "column",
              "width": "40%",
            }
          }
        >
          <LmcHandoverNotes
            notes={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "id": "TestId",
                  "note": "This is a note",
                },
              ]
            }
          />
          <Connect(LmcSeenByList)
            seenBy={
              Array [
                "TestId1",
                "TestId2",
                "TestId3",
              ]
            }
          />
        </div>
      </div>
    </AnimateHeight>
  </div>,
  "nodes": Array [
    <div>
      <LmcHandoverTitleBar
        createdBy={Object {}}
        createdOn="Tue Jan 01 2019 00:00:00 GMT+0000 (GMT)"
        onClick={[Function]}
        witnessedBy={Object {}}
      />
      <AnimateHeight
        animateOpacity={false}
        animationStateClasses={
          Object {
            "animating": "rah-animating",
            "animatingDown": "rah-animating--down",
            "animatingToHeightAuto": "rah-animating--to-height-auto",
            "animatingToHeightSpecific": "rah-animating--to-height-specific",
            "animatingToHeightZero": "rah-animating--to-height-zero",
            "animatingUp": "rah-animating--up",
            "static": "rah-static",
            "staticHeightAuto": "rah-static--height-auto",
            "staticHeightSpecific": "rah-static--height-specific",
            "staticHeightZero": "rah-static--height-zero",
          }
        }
        applyInlineTransitions={true}
        delay={0}
        duration={500}
        easing="ease"
        height={0}
        style={Object {}}
      >
        <div
          style={
            Object {
              "borderBottom": "1px #eaeaea solid",
              "display": "flex",
              "flexDirection": "row",
              "marginBottom": 10,
              "width": "100%",
            }
          }
        >
          <div
            style={
              Object {
                "paddingRight": 20,
                "width": "60%",
              }
            }
          >
            <div>
              <LmcHandoverResidentItem
                data={
                  Object {
                    "logs": Array [
                      Object {
                        "createdBy": "TestCarer",
                        "description": "This is a log",
                        "id": "TestId",
                      },
                    ],
                    "resident": Object {
                      "id": "TestId2",
                      "name": "TestResident",
                      "picture": "TestPicture",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            style={
              Object {
                "display": "flex",
                "flex": "1",
                "flexDirection": "column",
                "width": "40%",
              }
            }
          >
            <LmcHandoverNotes
              notes={
                Array [
                  Object {
                    "createdBy": "TestCarer",
                    "id": "TestId",
                    "note": "This is a note",
                  },
                ]
              }
            />
            <Connect(LmcSeenByList)
              seenBy={
                Array [
                  "TestId1",
                  "TestId2",
                  "TestId3",
                ]
              }
            />
          </div>
        </div>
      </AnimateHeight>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcHandoverHistoryItem
        handover={
          Object {
            "createdBy": Object {},
            "createdOn": "Tue Jan 01 2019 00:00:00 GMT+0000 (GMT)",
            "logsByResident": Array [
              Object {
                "logs": Array [
                  Object {
                    "createdBy": "TestCarer",
                    "description": "This is a log",
                    "id": "TestId",
                  },
                ],
                "resident": Object {
                  "id": "TestId2",
                  "name": "TestResident",
                  "picture": "TestPicture",
                },
              },
            ],
            "notes": Array [
              Object {
                "createdBy": "TestCarer",
                "id": "TestId",
                "note": "This is a note",
              },
            ],
            "seenBy": Array [
              "TestId1",
              "TestId2",
              "TestId3",
            ],
            "witnessedBy": Object {},
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcHandoverHistoryItem {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "handover": Object {
            "createdBy": Object {},
            "createdOn": "Tue Jan 01 2019 00:00:00 GMT+0000 (GMT)",
            "logsByResident": Array [
              Object {
                "logs": Array [
                  Object {
                    "createdBy": "TestCarer",
                    "description": "This is a log",
                    "id": "TestId",
                  },
                ],
                "resident": Object {
                  "id": "TestId2",
                  "name": "TestResident",
                  "picture": "TestPicture",
                },
              },
            ],
            "notes": Array [
              Object {
                "createdBy": "TestCarer",
                "id": "TestId",
                "note": "This is a note",
              },
            ],
            "seenBy": Array [
              "TestId1",
              "TestId2",
              "TestId3",
            ],
            "witnessedBy": Object {},
          },
        },
        "refs": Object {},
        "renderData": [Function],
        "renderHandoverCarers": [Function],
        "state": Object {
          "isShowingContent": false,
        },
        "toggleContent": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <LmcHandoverTitleBar
            createdBy={Object {}}
            createdOn="Tue Jan 01 2019 00:00:00 GMT+0000 (GMT)"
            onClick={[Function]}
            witnessedBy={Object {}}
          />
          <AnimateHeight
            animateOpacity={false}
            animationStateClasses={
              Object {
                "animating": "rah-animating",
                "animatingDown": "rah-animating--down",
                "animatingToHeightAuto": "rah-animating--to-height-auto",
                "animatingToHeightSpecific": "rah-animating--to-height-specific",
                "animatingToHeightZero": "rah-animating--to-height-zero",
                "animatingUp": "rah-animating--up",
                "static": "rah-static",
                "staticHeightAuto": "rah-static--height-auto",
                "staticHeightSpecific": "rah-static--height-specific",
                "staticHeightZero": "rah-static--height-zero",
              }
            }
            applyInlineTransitions={true}
            delay={0}
            duration={500}
            easing="ease"
            height={0}
            style={Object {}}
          >
            <div
              style={
                Object {
                  "borderBottom": "1px #eaeaea solid",
                  "display": "flex",
                  "flexDirection": "row",
                  "marginBottom": 10,
                  "width": "100%",
                }
              }
            >
              <div
                style={
                  Object {
                    "paddingRight": 20,
                    "width": "60%",
                  }
                }
              >
                <div>
                  <LmcHandoverResidentItem
                    data={
                      Object {
                        "logs": Array [
                          Object {
                            "createdBy": "TestCarer",
                            "description": "This is a log",
                            "id": "TestId",
                          },
                        ],
                        "resident": Object {
                          "id": "TestId2",
                          "name": "TestResident",
                          "picture": "TestPicture",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                style={
                  Object {
                    "display": "flex",
                    "flex": "1",
                    "flexDirection": "column",
                    "width": "40%",
                  }
                }
              >
                <LmcHandoverNotes
                  notes={
                    Array [
                      Object {
                        "createdBy": "TestCarer",
                        "id": "TestId",
                        "note": "This is a note",
                      },
                    ]
                  }
                />
                <Connect(LmcSeenByList)
                  seenBy={
                    Array [
                      "TestId1",
                      "TestId2",
                      "TestId3",
                    ]
                  }
                />
              </div>
            </div>
          </AnimateHeight>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <LmcHandoverTitleBar
            createdBy={Object {}}
            createdOn="Tue Jan 01 2019 00:00:00 GMT+0000 (GMT)"
            onClick={[Function]}
            witnessedBy={Object {}}
          />
          <AnimateHeight
            animateOpacity={false}
            animationStateClasses={
              Object {
                "animating": "rah-animating",
                "animatingDown": "rah-animating--down",
                "animatingToHeightAuto": "rah-animating--to-height-auto",
                "animatingToHeightSpecific": "rah-animating--to-height-specific",
                "animatingToHeightZero": "rah-animating--to-height-zero",
                "animatingUp": "rah-animating--up",
                "static": "rah-static",
                "staticHeightAuto": "rah-static--height-auto",
                "staticHeightSpecific": "rah-static--height-specific",
                "staticHeightZero": "rah-static--height-zero",
              }
            }
            applyInlineTransitions={true}
            delay={0}
            duration={500}
            easing="ease"
            height={0}
            style={Object {}}
          >
            <div
              style={
                Object {
                  "borderBottom": "1px #eaeaea solid",
                  "display": "flex",
                  "flexDirection": "row",
                  "marginBottom": 10,
                  "width": "100%",
                }
              }
            >
              <div
                style={
                  Object {
                    "paddingRight": 20,
                    "width": "60%",
                  }
                }
              >
                <div>
                  <LmcHandoverResidentItem
                    data={
                      Object {
                        "logs": Array [
                          Object {
                            "createdBy": "TestCarer",
                            "description": "This is a log",
                            "id": "TestId",
                          },
                        ],
                        "resident": Object {
                          "id": "TestId2",
                          "name": "TestResident",
                          "picture": "TestPicture",
                        },
                      }
                    }
                  />
                </div>
              </div>
              <div
                style={
                  Object {
                    "display": "flex",
                    "flex": "1",
                    "flexDirection": "column",
                    "width": "40%",
                  }
                }
              >
                <LmcHandoverNotes
                  notes={
                    Array [
                      Object {
                        "createdBy": "TestCarer",
                        "id": "TestId",
                        "note": "This is a note",
                      },
                    ]
                  }
                />
                <Connect(LmcSeenByList)
                  seenBy={
                    Array [
                      "TestId1",
                      "TestId2",
                      "TestId3",
                    ]
                  }
                />
              </div>
            </div>
          </AnimateHeight>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcHandoverHistoryItem
    handover={
      Object {
        "createdBy": Object {},
        "createdOn": "Tue Jan 01 2019 00:00:00 GMT+0000 (GMT)",
        "logsByResident": Array [
          Object {
            "logs": Array [
              Object {
                "createdBy": "TestCarer",
                "description": "This is a log",
                "id": "TestId",
              },
            ],
            "resident": Object {
              "id": "TestId2",
              "name": "TestResident",
              "picture": "TestPicture",
            },
          },
        ],
        "notes": Array [
          Object {
            "createdBy": "TestCarer",
            "id": "TestId",
            "note": "This is a note",
          },
        ],
        "seenBy": Array [
          "TestId1",
          "TestId2",
          "TestId3",
        ],
        "witnessedBy": Object {},
      }
    }
  />,
}
`;
