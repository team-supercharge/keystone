// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcHandoverHistoryItem renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <div
      style={
        Object {
          "paddingRight": 20,
          "width": "60%",
        }
      }
    >
      <div>
        <LmcHandoverResidentItem
          data={
            Object {
              "logs": Array [
                Object {
                  "createdBy": "TestCarer",
                  "description": "This is a log",
                  "id": "TestId",
                },
              ],
              "resident": Object {
                "id": "TestId2",
                "name": "TestResident",
                "picture": "TestPicture",
              },
            }
          }
        />
      </div>
    </div>
    <div
      style={
        Object {
          "flex": "1",
          "width": "40%",
        }
      }
    >
      <LmcHandoverNotes
        notes={
          Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "note": "This is a note",
            },
          ]
        }
      />
    </div>
  </div>,
  "nodes": Array [
    <div
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <div
        style={
          Object {
            "paddingRight": 20,
            "width": "60%",
          }
        }
      >
        <div>
          <LmcHandoverResidentItem
            data={
              Object {
                "logs": Array [
                  Object {
                    "createdBy": "TestCarer",
                    "description": "This is a log",
                    "id": "TestId",
                  },
                ],
                "resident": Object {
                  "id": "TestId2",
                  "name": "TestResident",
                  "picture": "TestPicture",
                },
              }
            }
          />
        </div>
      </div>
      <div
        style={
          Object {
            "flex": "1",
            "width": "40%",
          }
        }
      >
        <LmcHandoverNotes
          notes={
            Array [
              Object {
                "createdBy": "TestCarer",
                "id": "TestId",
                "note": "This is a note",
              },
            ]
          }
        />
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcHandoverHistoryItem
        handover={
          Object {
            "logsByResident": Array [
              Object {
                "logs": Array [
                  Object {
                    "createdBy": "TestCarer",
                    "description": "This is a log",
                    "id": "TestId",
                  },
                ],
                "resident": Object {
                  "id": "TestId2",
                  "name": "TestResident",
                  "picture": "TestPicture",
                },
              },
            ],
            "notes": Array [
              Object {
                "createdBy": "TestCarer",
                "id": "TestId",
                "note": "This is a note",
              },
            ],
            "seenBy": Array [
              "TestId1",
              "TestId2",
              "TestId3",
            ],
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcHandoverHistoryItem {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "handover": Object {
            "logsByResident": Array [
              Object {
                "logs": Array [
                  Object {
                    "createdBy": "TestCarer",
                    "description": "This is a log",
                    "id": "TestId",
                  },
                ],
                "resident": Object {
                  "id": "TestId2",
                  "name": "TestResident",
                  "picture": "TestPicture",
                },
              },
            ],
            "notes": Array [
              Object {
                "createdBy": "TestCarer",
                "id": "TestId",
                "note": "This is a note",
              },
            ],
            "seenBy": Array [
              "TestId1",
              "TestId2",
              "TestId3",
            ],
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
              "width": "100%",
            }
          }
        >
          <div
            style={
              Object {
                "paddingRight": 20,
                "width": "60%",
              }
            }
          >
            <div>
              <LmcHandoverResidentItem
                data={
                  Object {
                    "logs": Array [
                      Object {
                        "createdBy": "TestCarer",
                        "description": "This is a log",
                        "id": "TestId",
                      },
                    ],
                    "resident": Object {
                      "id": "TestId2",
                      "name": "TestResident",
                      "picture": "TestPicture",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            style={
              Object {
                "flex": "1",
                "width": "40%",
              }
            }
          >
            <LmcHandoverNotes
              notes={
                Array [
                  Object {
                    "createdBy": "TestCarer",
                    "id": "TestId",
                    "note": "This is a note",
                  },
                ]
              }
            />
          </div>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
              "width": "100%",
            }
          }
        >
          <div
            style={
              Object {
                "paddingRight": 20,
                "width": "60%",
              }
            }
          >
            <div>
              <LmcHandoverResidentItem
                data={
                  Object {
                    "logs": Array [
                      Object {
                        "createdBy": "TestCarer",
                        "description": "This is a log",
                        "id": "TestId",
                      },
                    ],
                    "resident": Object {
                      "id": "TestId2",
                      "name": "TestResident",
                      "picture": "TestPicture",
                    },
                  }
                }
              />
            </div>
          </div>
          <div
            style={
              Object {
                "flex": "1",
                "width": "40%",
              }
            }
          >
            <LmcHandoverNotes
              notes={
                Array [
                  Object {
                    "createdBy": "TestCarer",
                    "id": "TestId",
                    "note": "This is a note",
                  },
                ]
              }
            />
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcHandoverHistoryItem
    handover={
      Object {
        "logsByResident": Array [
          Object {
            "logs": Array [
              Object {
                "createdBy": "TestCarer",
                "description": "This is a log",
                "id": "TestId",
              },
            ],
            "resident": Object {
              "id": "TestId2",
              "name": "TestResident",
              "picture": "TestPicture",
            },
          },
        ],
        "notes": Array [
          Object {
            "createdBy": "TestCarer",
            "id": "TestId",
            "note": "This is a note",
          },
        ],
        "seenBy": Array [
          "TestId1",
          "TestId2",
          "TestId3",
        ],
      }
    }
  />,
}
`;
