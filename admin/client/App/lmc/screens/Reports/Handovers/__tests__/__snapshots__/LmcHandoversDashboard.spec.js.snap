// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcHandoversDashboard renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <LmcCurrentHandover
      logs={
        Array [
          Object {
            "createdBy": "TestCarer",
            "description": "This is a log",
            "id": "TestId",
          },
        ]
      }
      notes={
        Array [
          Object {
            "createdBy": "TestCarer",
            "id": "TestId",
            "note": "This is a note",
          },
        ]
      }
    />
    <LmcHandoversHistory
      handovers={
        Array [
          Object {
            "createdBy": "TestCarer",
            "id": "TestId",
            "witnessedBy": "TestCarer2",
          },
        ]
      }
    />
  </div>,
  "nodes": Array [
    <div>
      <LmcCurrentHandover
        logs={
          Array [
            Object {
              "createdBy": "TestCarer",
              "description": "This is a log",
              "id": "TestId",
            },
          ]
        }
        notes={
          Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "note": "This is a note",
            },
          ]
        }
      />
      <LmcHandoversHistory
        handovers={
          Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "witnessedBy": "TestCarer2",
            },
          ]
        }
      />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcHandoversDashboard
        currentHandoverLogs={
          Array [
            Object {
              "createdBy": "TestCarer",
              "description": "This is a log",
              "id": "TestId",
            },
          ]
        }
        currentHandoverNotes={
          Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "note": "This is a note",
            },
          ]
        }
        fetchCurrentHandoverLogs={[MockFunction]}
        fetchCurrentHandoverNotes={[MockFunction]}
        handoverHistory={
          Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "witnessedBy": "TestCarer2",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcHandoversDashboard {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "currentHandoverLogs": Array [
            Object {
              "createdBy": "TestCarer",
              "description": "This is a log",
              "id": "TestId",
            },
          ],
          "currentHandoverNotes": Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "note": "This is a note",
            },
          ],
          "fetchCurrentHandoverLogs": [MockFunction],
          "fetchCurrentHandoverNotes": [MockFunction],
          "handoverHistory": Array [
            Object {
              "createdBy": "TestCarer",
              "id": "TestId",
              "witnessedBy": "TestCarer2",
            },
          ],
        },
        "refs": Object {},
        "showProAlert": [Function],
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <LmcCurrentHandover
            logs={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "description": "This is a log",
                  "id": "TestId",
                },
              ]
            }
            notes={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "id": "TestId",
                  "note": "This is a note",
                },
              ]
            }
          />
          <LmcHandoversHistory
            handovers={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "id": "TestId",
                  "witnessedBy": "TestCarer2",
                },
              ]
            }
          />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <LmcCurrentHandover
            logs={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "description": "This is a log",
                  "id": "TestId",
                },
              ]
            }
            notes={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "id": "TestId",
                  "note": "This is a note",
                },
              ]
            }
          />
          <LmcHandoversHistory
            handovers={
              Array [
                Object {
                  "createdBy": "TestCarer",
                  "id": "TestId",
                  "witnessedBy": "TestCarer2",
                },
              ]
            }
          />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcHandoversDashboard
    currentHandoverLogs={
      Array [
        Object {
          "createdBy": "TestCarer",
          "description": "This is a log",
          "id": "TestId",
        },
      ]
    }
    currentHandoverNotes={
      Array [
        Object {
          "createdBy": "TestCarer",
          "id": "TestId",
          "note": "This is a note",
        },
      ]
    }
    fetchCurrentHandoverLogs={[MockFunction]}
    fetchCurrentHandoverNotes={[MockFunction]}
    handoverHistory={
      Array [
        Object {
          "createdBy": "TestCarer",
          "id": "TestId",
          "witnessedBy": "TestCarer2",
        },
      ]
    }
  />,
}
`;
