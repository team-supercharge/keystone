// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcDocumentItem renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <li
    style={
      Object {
        "height": 70,
      }
    }
  >
    <div
      style={
        Object {
          "backgroundColor": "#8AABC8",
          "borderRadius": 20,
          "bottom": 2,
          "float": "left",
          "height": 40,
          "position": "relative",
          "textAlign": "center",
          "width": 40,
        }
      }
    >
      <img
        src="https://s3.eu-west-2.amazonaws.com/lmc-data-production/public/assessment.png"
        style={
          Object {
            "height": 20,
            "margin": "9px 0px 0px 0px",
            "width": 20,
          }
        }
      />
    </div>
    <div
      style={
        Object {
          "display": "inline-block",
          "paddingLeft": 20,
        }
      }
    >
      <a
        href="TestLink"
        style={
          Object {
            "color": "black",
            "fontSize": 15,
            "textDecoration": "none",
          }
        }
        target="_blank"
      >
        TestDocument
      </a>
      <br />
      <span
        style={
          Object {
            "fontSize": 12,
            "opacity": "0.6",
          }
        }
      >
        Added 
        0
         days ago
      </span>
    </div>
    <Button
      aphroditeStyles={Array []}
      color="delete"
      data-button="delete"
      onClick={[Function]}
      style={
        Object {
          "float": "right",
        }
      }
      variant="link"
    >
      Delete
    </Button>
    <Button
      aphroditeStyles={Array []}
      color="default"
      href="TestLink"
      style={
        Object {
          "float": "right",
          "padding": "0px !important",
        }
      }
      target="_blank"
      variant="fill"
    >
      View
    </Button>
    <ConfirmationDialog
      cancelLabel="Cancel"
      confirmationLabel="Delete"
      confirmationType="danger"
      isOpen={false}
      onCancel={[Function]}
      onConfirmation={[Function]}
    >
      <div>
        Are you sure you want to delete this document? If you go ahead, it can’t be undone. Once it's gone, it’s gone for good!
      </div>
    </ConfirmationDialog>
  </li>,
  "nodes": Array [
    <li
      style={
        Object {
          "height": 70,
        }
      }
    >
      <div
        style={
          Object {
            "backgroundColor": "#8AABC8",
            "borderRadius": 20,
            "bottom": 2,
            "float": "left",
            "height": 40,
            "position": "relative",
            "textAlign": "center",
            "width": 40,
          }
        }
      >
        <img
          src="https://s3.eu-west-2.amazonaws.com/lmc-data-production/public/assessment.png"
          style={
            Object {
              "height": 20,
              "margin": "9px 0px 0px 0px",
              "width": 20,
            }
          }
        />
      </div>
      <div
        style={
          Object {
            "display": "inline-block",
            "paddingLeft": 20,
          }
        }
      >
        <a
          href="TestLink"
          style={
            Object {
              "color": "black",
              "fontSize": 15,
              "textDecoration": "none",
            }
          }
          target="_blank"
        >
          TestDocument
        </a>
        <br />
        <span
          style={
            Object {
              "fontSize": 12,
              "opacity": "0.6",
            }
          }
        >
          Added 
          0
           days ago
        </span>
      </div>
      <Button
        aphroditeStyles={Array []}
        color="delete"
        data-button="delete"
        onClick={[Function]}
        style={
          Object {
            "float": "right",
          }
        }
        variant="link"
      >
        Delete
      </Button>
      <Button
        aphroditeStyles={Array []}
        color="default"
        href="TestLink"
        style={
          Object {
            "float": "right",
            "padding": "0px !important",
          }
        }
        target="_blank"
        variant="fill"
      >
        View
      </Button>
      <ConfirmationDialog
        cancelLabel="Cancel"
        confirmationLabel="Delete"
        confirmationType="danger"
        isOpen={false}
        onCancel={[Function]}
        onConfirmation={[Function]}
      >
        <div>
          Are you sure you want to delete this document? If you go ahead, it can’t be undone. Once it's gone, it’s gone for good!
        </div>
      </ConfirmationDialog>
    </li>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcDocumentItem
        data={
          Object {
            "name": "TestDocument",
            "pdf": "TestLink",
          }
        }
        onDelete={[MockFunction]}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcDocumentItem {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "data": Object {
            "name": "TestDocument",
            "pdf": "TestLink",
          },
          "onDelete": [MockFunction],
        },
        "refs": Object {},
        "state": Object {
          "deleteDialogOpen": false,
        },
        "toggleDeleteDialog": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <li
          style={
            Object {
              "height": 70,
            }
          }
        >
          <div
            style={
              Object {
                "backgroundColor": "#8AABC8",
                "borderRadius": 20,
                "bottom": 2,
                "float": "left",
                "height": 40,
                "position": "relative",
                "textAlign": "center",
                "width": 40,
              }
            }
          >
            <img
              src="https://s3.eu-west-2.amazonaws.com/lmc-data-production/public/assessment.png"
              style={
                Object {
                  "height": 20,
                  "margin": "9px 0px 0px 0px",
                  "width": 20,
                }
              }
            />
          </div>
          <div
            style={
              Object {
                "display": "inline-block",
                "paddingLeft": 20,
              }
            }
          >
            <a
              href="TestLink"
              style={
                Object {
                  "color": "black",
                  "fontSize": 15,
                  "textDecoration": "none",
                }
              }
              target="_blank"
            >
              TestDocument
            </a>
            <br />
            <span
              style={
                Object {
                  "fontSize": 12,
                  "opacity": "0.6",
                }
              }
            >
              Added 
              0
               days ago
            </span>
          </div>
          <Button
            aphroditeStyles={Array []}
            color="delete"
            data-button="delete"
            onClick={[Function]}
            style={
              Object {
                "float": "right",
              }
            }
            variant="link"
          >
            Delete
          </Button>
          <Button
            aphroditeStyles={Array []}
            color="default"
            href="TestLink"
            style={
              Object {
                "float": "right",
                "padding": "0px !important",
              }
            }
            target="_blank"
            variant="fill"
          >
            View
          </Button>
          <ConfirmationDialog
            cancelLabel="Cancel"
            confirmationLabel="Delete"
            confirmationType="danger"
            isOpen={false}
            onCancel={[Function]}
            onConfirmation={[Function]}
          >
            <div>
              Are you sure you want to delete this document? If you go ahead, it can’t be undone. Once it's gone, it’s gone for good!
            </div>
          </ConfirmationDialog>
        </li>,
        "_debugID": 2,
        "_renderedOutput": <li
          style={
            Object {
              "height": 70,
            }
          }
        >
          <div
            style={
              Object {
                "backgroundColor": "#8AABC8",
                "borderRadius": 20,
                "bottom": 2,
                "float": "left",
                "height": 40,
                "position": "relative",
                "textAlign": "center",
                "width": 40,
              }
            }
          >
            <img
              src="https://s3.eu-west-2.amazonaws.com/lmc-data-production/public/assessment.png"
              style={
                Object {
                  "height": 20,
                  "margin": "9px 0px 0px 0px",
                  "width": 20,
                }
              }
            />
          </div>
          <div
            style={
              Object {
                "display": "inline-block",
                "paddingLeft": 20,
              }
            }
          >
            <a
              href="TestLink"
              style={
                Object {
                  "color": "black",
                  "fontSize": 15,
                  "textDecoration": "none",
                }
              }
              target="_blank"
            >
              TestDocument
            </a>
            <br />
            <span
              style={
                Object {
                  "fontSize": 12,
                  "opacity": "0.6",
                }
              }
            >
              Added 
              0
               days ago
            </span>
          </div>
          <Button
            aphroditeStyles={Array []}
            color="delete"
            data-button="delete"
            onClick={[Function]}
            style={
              Object {
                "float": "right",
              }
            }
            variant="link"
          >
            Delete
          </Button>
          <Button
            aphroditeStyles={Array []}
            color="default"
            href="TestLink"
            style={
              Object {
                "float": "right",
                "padding": "0px !important",
              }
            }
            target="_blank"
            variant="fill"
          >
            View
          </Button>
          <ConfirmationDialog
            cancelLabel="Cancel"
            confirmationLabel="Delete"
            confirmationType="danger"
            isOpen={false}
            onCancel={[Function]}
            onConfirmation={[Function]}
          >
            <div>
              Are you sure you want to delete this document? If you go ahead, it can’t be undone. Once it's gone, it’s gone for good!
            </div>
          </ConfirmationDialog>
        </li>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcDocumentItem
    data={
      Object {
        "name": "TestDocument",
        "pdf": "TestLink",
      }
    }
    onDelete={[MockFunction]}
  />,
}
`;
