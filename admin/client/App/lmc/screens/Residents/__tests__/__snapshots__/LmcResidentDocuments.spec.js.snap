// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcResidentDocuments renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    {"Going to Bed and Sleeping":[{"name":"TestDocument"}]}
  </div>,
  "nodes": Array [
    <div>
      {"Going to Bed and Sleeping":[{"name":"TestDocument"}]}
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcResidentDocuments
        documents={
          Object {
            "Going to Bed and Sleeping": Array [
              Object {
                "name": "TestDocument",
              },
            ],
          }
        }
        fetchDocuments={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
      />,
      "_debugID": 4,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcResidentDocuments {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "documents": Object {
            "Going to Bed and Sleeping": Array [
              Object {
                "name": "TestDocument",
              },
            ],
          },
          "fetchDocuments": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
        },
        "refs": Object {},
        "renderDocuments": [Function],
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          {"Going to Bed and Sleeping":[{"name":"TestDocument"}]}
        </div>,
        "_debugID": 5,
        "_renderedOutput": <div>
          {"Going to Bed and Sleeping":[{"name":"TestDocument"}]}
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcResidentDocuments
    documents={
      Object {
        "Going to Bed and Sleeping": Array [
          Object {
            "name": "TestDocument",
          },
        ],
      }
    }
    fetchDocuments={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
}
`;
