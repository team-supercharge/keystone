// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcResidentDocuments renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <LmcCreateButton
      buttonText="Document"
      listId="Document"
      onCreate={[MockFunction]}
      prefillPath="resident"
      style={
        Object {
          "float": "right",
          "width": 200,
        }
      }
      title="Add a Document"
    />
    <LmcDocumentList
      documents={
        Object {
          "Going to Bed and Sleeping": Array [
            Object {
              "name": "TestDocument",
            },
          ],
        }
      }
      listId="documents"
      onDelete={[MockFunction]}
    />
  </div>,
  "nodes": Array [
    <div>
      <LmcCreateButton
        buttonText="Document"
        listId="Document"
        onCreate={[MockFunction]}
        prefillPath="resident"
        style={
          Object {
            "float": "right",
            "width": 200,
          }
        }
        title="Add a Document"
      />
      <LmcDocumentList
        documents={
          Object {
            "Going to Bed and Sleeping": Array [
              Object {
                "name": "TestDocument",
              },
            ],
          }
        }
        listId="documents"
        onDelete={[MockFunction]}
      />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcResidentDocuments
        deleteDocument={[MockFunction]}
        documents={
          Object {
            "Going to Bed and Sleeping": Array [
              Object {
                "name": "TestDocument",
              },
            ],
          }
        }
        fetchDocuments={[MockFunction]}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcResidentDocuments {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "deleteDocument": [MockFunction],
          "documents": Object {
            "Going to Bed and Sleeping": Array [
              Object {
                "name": "TestDocument",
              },
            ],
          },
          "fetchDocuments": [MockFunction],
        },
        "refs": Object {},
        "state": Object {
          "documentsFetchInterval": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <LmcCreateButton
            buttonText="Document"
            listId="Document"
            onCreate={[MockFunction]}
            prefillPath="resident"
            style={
              Object {
                "float": "right",
                "width": 200,
              }
            }
            title="Add a Document"
          />
          <LmcDocumentList
            documents={
              Object {
                "Going to Bed and Sleeping": Array [
                  Object {
                    "name": "TestDocument",
                  },
                ],
              }
            }
            listId="documents"
            onDelete={[MockFunction]}
          />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <LmcCreateButton
            buttonText="Document"
            listId="Document"
            onCreate={[MockFunction]}
            prefillPath="resident"
            style={
              Object {
                "float": "right",
                "width": 200,
              }
            }
            title="Add a Document"
          />
          <LmcDocumentList
            documents={
              Object {
                "Going to Bed and Sleeping": Array [
                  Object {
                    "name": "TestDocument",
                  },
                ],
              }
            }
            listId="documents"
            onDelete={[MockFunction]}
          />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcResidentDocuments
    deleteDocument={[MockFunction]}
    documents={
      Object {
        "Going to Bed and Sleeping": Array [
          Object {
            "name": "TestDocument",
          },
        ],
      }
    }
    fetchDocuments={[MockFunction]}
  />,
}
`;
