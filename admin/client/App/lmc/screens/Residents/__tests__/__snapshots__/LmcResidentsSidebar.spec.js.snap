// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LmcResidentsSidebar should render correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="lmc-box-shadow__right"
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "height": "100vh",
        "width": "20vw",
        "zIndex": "-1",
      }
    }
  >
    <ul
      style={
        Object {
          "margin": 0,
          "padding": 0,
        }
      }
    >
      <LmcResidentsSidebarItem
        isSelected={true}
        onClick={[Function]}
        resident={
          Object {
            "id": "testId1",
            "name": "testId2",
          }
        }
      />
      <LmcResidentsSidebarItem
        isSelected={false}
        onClick={[Function]}
        resident={
          Object {
            "id": "testId2",
            "name": "testId2",
          }
        }
      />
      <LmcResidentsSidebarItem
        isSelected={false}
        onClick={[Function]}
        resident={
          Object {
            "id": "testId3",
            "name": "testId3",
          }
        }
      />
    </ul>
  </div>,
  "nodes": Array [
    <div
      className="lmc-box-shadow__right"
      style={
        Object {
          "display": "flex",
          "flexDirection": "column",
          "height": "100vh",
          "width": "20vw",
          "zIndex": "-1",
        }
      }
    >
      <ul
        style={
          Object {
            "margin": 0,
            "padding": 0,
          }
        }
      >
        <LmcResidentsSidebarItem
          isSelected={true}
          onClick={[Function]}
          resident={
            Object {
              "id": "testId1",
              "name": "testId2",
            }
          }
        />
        <LmcResidentsSidebarItem
          isSelected={false}
          onClick={[Function]}
          resident={
            Object {
              "id": "testId2",
              "name": "testId2",
            }
          }
        />
        <LmcResidentsSidebarItem
          isSelected={false}
          onClick={[Function]}
          resident={
            Object {
              "id": "testId3",
              "name": "testId3",
            }
          }
        />
      </ul>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LmcResidentsSidebar
        initialSelectedResident={
          Object {
            "id": "testId1",
            "name": "testId2",
          }
        }
        residents={
          Array [
            Object {
              "id": "testId1",
              "name": "testId2",
            },
            Object {
              "id": "testId2",
              "name": "testId2",
            },
            Object {
              "id": "testId3",
              "name": "testId3",
            },
          ]
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LmcResidentsSidebar {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "initialSelectedResident": Object {
            "id": "testId1",
            "name": "testId2",
          },
          "residents": Array [
            Object {
              "id": "testId1",
              "name": "testId2",
            },
            Object {
              "id": "testId2",
              "name": "testId2",
            },
            Object {
              "id": "testId3",
              "name": "testId3",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="lmc-box-shadow__right"
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "height": "100vh",
              "width": "20vw",
              "zIndex": "-1",
            }
          }
        >
          <ul
            style={
              Object {
                "margin": 0,
                "padding": 0,
              }
            }
          >
            <LmcResidentsSidebarItem
              isSelected={true}
              onClick={[Function]}
              resident={
                Object {
                  "id": "testId1",
                  "name": "testId2",
                }
              }
            />
            <LmcResidentsSidebarItem
              isSelected={false}
              onClick={[Function]}
              resident={
                Object {
                  "id": "testId2",
                  "name": "testId2",
                }
              }
            />
            <LmcResidentsSidebarItem
              isSelected={false}
              onClick={[Function]}
              resident={
                Object {
                  "id": "testId3",
                  "name": "testId3",
                }
              }
            />
          </ul>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="lmc-box-shadow__right"
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "height": "100vh",
              "width": "20vw",
              "zIndex": "-1",
            }
          }
        >
          <ul
            style={
              Object {
                "margin": 0,
                "padding": 0,
              }
            }
          >
            <LmcResidentsSidebarItem
              isSelected={true}
              onClick={[Function]}
              resident={
                Object {
                  "id": "testId1",
                  "name": "testId2",
                }
              }
            />
            <LmcResidentsSidebarItem
              isSelected={false}
              onClick={[Function]}
              resident={
                Object {
                  "id": "testId2",
                  "name": "testId2",
                }
              }
            />
            <LmcResidentsSidebarItem
              isSelected={false}
              onClick={[Function]}
              resident={
                Object {
                  "id": "testId3",
                  "name": "testId3",
                }
              }
            />
          </ul>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LmcResidentsSidebar
    initialSelectedResident={
      Object {
        "id": "testId1",
        "name": "testId2",
      }
    }
    residents={
      Array [
        Object {
          "id": "testId1",
          "name": "testId2",
        },
        Object {
          "id": "testId2",
          "name": "testId2",
        },
        Object {
          "id": "testId3",
          "name": "testId3",
        },
      ]
    }
  />,
}
`;
